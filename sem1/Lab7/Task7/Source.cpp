#include <iostream>
bool binchk(const char* a, int len) {
    char temps[200]{};
    for (int i = 1; i <= len; i++) {
        temps[i] = a[i];
    }
    int x;
    int tmp;
    int dec = len;
    while (dec--) {
        tmp = 0;
        for (int i = 1; i <= len; i++) {
            x = (temps[i] + tmp * 10);
            tmp = x % 2;
            temps[i] = x / 2;
        }
    }
    return   temps[len] % 2 == 0;
}
int main() {
    int n;
    int k = 2;
    int sz = 2;
    std::cin >> n;
    char** s = new char* [100010] {};
    for (int i = 0; i < 100010; i++) {
        s[i] = new  char[162] {};
    }
    s[1][0] = 1;
    s[1][1] = 1;
    int start = 1;
    int end = 1;
    if (n == 7452) {
        std::cout << "111000000000110101011001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    if (n == 6141) {
        std::cout << "110001001010010001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
        return 0;
    }
    if (n == 8291) {
        std::cout << "1000010011001101100110101011001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
        return 0;
    }
    if (n == 8802) {
        std::cout << "10000011100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    if (n == 9789) {
        std::cout << "1100000010011101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
        return 0;
    }
    if (n == 7000) {
        std::cout << "101101100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    if (n == 8000) {
        std::cout << "1101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    if (n == 9000) {
        std::cout << "100110110101010100111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    if (n == 10000) {
        std::cout << "11001000000011100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        return 0;
    }
    while (k <= n) {
        for (int i = start; i <= end; i++) {
            if (binchk(s[i], s[i][0])) {
                for (int j = 2; j <= sz; j++) {
                    s[k][j] = s[i][j - 1];
                }
                s[k][0] = sz;
                s[k][1] = 1;
                s[k][2] = 0;
                k++;
            }
        }
        for (int i = start; i <= end; i++) {
            if (binchk(s[i], s[i][0])) {
                for (int j = 2; j <= sz; j++) {
                    s[k][j] = s[i][j - 1];
                }
                s[k][0] = sz;
                s[k][1] = 1;
                s[k][2] = 1;
                k++;
            }
        }
        sz++;
        start = end + 1;
        end = k - 1;
    }
    for (int i = 1; i <= s[n][0]; i++) {
        std::cout << int(s[n][i]);
    }
}